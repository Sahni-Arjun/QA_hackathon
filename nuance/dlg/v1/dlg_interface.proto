syntax = "proto3";
package nuance.dlg.v1;

import "google/api/annotations.proto";
import "nuance/dlg/v1/dlg_messages.proto";

option java_multiple_files = true;
option java_package = "com.nuance.coretech.dialog.v1.service";

service DialogService {
	// Starts a conversation.
	// Returns a **StartResponse** object.
	rpc Start(StartRequest) returns (StartResponse) {
		option (google.api.http) = {
			post : "/dlg/v1/start/{payload.model_ref.uri}"
			body: "*"
		};
	}

	//Used to continuously interact with the conversation based on end user input or events.
	//Returns an **ExecuteResponse** object that will contain data related to the dialog interactions and that can be 
	//used by the client to interact with the end user.
	rpc Execute(ExecuteRequest) returns (ExecuteResponse) {
		option (google.api.http) = {
			post : "/dlg/v1/execute/{session_id}"
			body: "*"
		};
	}

	//Performs recognition on streamed audio using ASRaaS and provides speech synthesis using TTSaaS.
    rpc ExecuteStream(stream StreamInput) returns (stream StreamOutput) {
    }

	//Ends a conversation and performs cleanup.
	//Returns a **StopResponse** object.
	rpc Stop(StopRequest) returns (StopResponse) {
		option (google.api.http) = {
			post : "/dlg/v1/stop/{session_id}"
		};
	}
}